name: CI/CD Taxi User Service

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      IMAGE_NAME: yahim202002/simple-taxi-user-service
      IMAGE_TAG: latest

    steps:
      # 1. Checkout кода
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # 3. Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 4. Build and push Docker image
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

      # 5. Deploy to Render
      - name: Deploy to Render
        env:
          RENDER_SERVICE_ID: ${{ secrets.RENDER_SERVICE_ID }}
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
          DB_URL: ${{ secrets.DB_URL }}
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        run: |
          curl -X POST "https://api.render.com/deploy/srv-${RENDER_SERVICE_ID}" \
            -H "Accept: application/json" \
            -H "Authorization: Bearer ${RENDER_API_KEY}" \
            -H "Content-Type: application/json" \
            -d "{
                  \"clearCache\": true,
                  \"envVars\": [
                    {\"key\":\"DB_URL\",\"value\":\"${DB_URL}\"},
                    {\"key\":\"DB_USERNAME\",\"value\":\"${DB_USERNAME}\"},
                    {\"key\":\"DB_PASSWORD\",\"value\":\"${DB_PASSWORD}\"}
                  ]
                }"



      # # 5. Set up kubectl (пока закомментировано)
      # - name: Set up kubectl
      #   uses: azure/setup-kubectl@v3
      #   with:
      #     version: 'v1.30.0'

      # # 6. Deploy to Kubernetes (пока закомментировано)
      # - name: Deploy to Kubernetes
      #   env:
      #     KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
      #   run: |
      #     echo "$KUBE_CONFIG_DATA" | base64 --decode > kubeconfig
      #     export KUBECONFIG=kubeconfig
      #     kubectl apply -f k8s/configmap.yaml
      #     kubectl apply -f k8s/secret.yaml
      #     kubectl apply -f k8s/deployment.yaml
      #     kubectl apply -f k8s/service.yaml
      #     kubectl apply -f k8s/ingress.yaml
